[build-system]
requires = ["setuptools>=70.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "llmchat-web"
version = "0.3.8" # Version for llmchat-web
description = "A Flask-based web interface for LLMCore, providing chat and RAG functionalities."
readme = "README.md" # Assuming llmchat-web will have its own README
requires-python = ">=3.11"
license = { text = "MIT" }
authors = [
    { name = "Araray Velho", email = "araray@gmail.com" }
]
keywords = ["llm", "ai", "chat", "web", "flask", "ui", "llmcore", "rag", "openai", "anthropic", "ollama", "gemini"] # Updated keywords
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications :: Chat",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application", # Added for Flask
    "Framework :: Flask", # Added for Flask
    "Operating System :: OS Independent",
]

# Core dependencies for llmchat-web
dependencies = [
    "llmcore >= 0.18.0",   # Core backend library
    "Flask>=3.0.0",        # Updated Flask version to match llmchat's server dep, was 3.1.0, using 3.0.0 as a common base.
    "pydantic>=2.0.0",     # For models.py, if used more extensively
    "werkzeug>=3.0.0",     # Flask dependency, often good to specify
    "apykatu>=0.10.0", # If llmchat-web's /ingest directly uses apykatu library features
    "GitPython>=3.1.0" # If llmchat-web's /ingest directly uses GitPython
    # REMOVED: "llmchat >= 0.19.0" - llmchat-web should not depend on the llmchat CLI package.
    # python-daemon is NOT a direct dependency of llmchat-web itself;
    # daemonization is handled by the llmchat CLI's 'web' command.
]

[project.urls]
Homepage = "https://github.com/araray/llmchat-web" # Updated URL
Repository = "https://github.com/araray/llmchat-web" # Updated URL
Documentation = "https://github.com/araray/llmchat-web" # Updated URL
Issues = "https://github.com/araray/llmchat-web/issues" # Updated URL

# [project.scripts]
# REMOVED: llmchat = "llmchat.main:main_cli_entry"
# If llmchat-web needs its own runnable script (e.g., 'llmchat-web-server'), define it here.
# For now, assuming it's run via 'python -m llmchat_web.app' or by 'llmchat web'.

# --- Setuptools specific configuration ---
[tool.setuptools.packages.find]
where = ["."]
include = ["llmchat_web*"] # Corrected to find llmchat_web packages
# exclude = ["llmchat_web.tests*"] # Example if tests are structured this way

# --- Ruff Linter & Formatter Configuration ---
[tool.ruff]
line-length = 100
indent-width = 4

[tool.ruff.lint]
select = [
    "E", "W", "F", "I", "C", "B", "A", "RUF", "ASYNC", "PT"
]
ignore = [
    "E501", "B008", "C901"
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# --- MyPy Type Checker Configuration ---
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
disallow_untyped_defs = false # Start less strict for web projects
check_untyped_defs = true

[[tool.mypy.overrides]]
module = "llmchat_web.*" # Corrected module path
disallow_untyped_defs = true # Enforce types within llmchat_web code

# [[tool.mypy.overrides]]
# module = "llmchat_web.tests.*" # Corrected module path for tests
# disallow_untyped_defs = false

# --- Pytest Configuration (Example for llmchat-web) ---
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=llmchat_web --cov-report=term-missing --cov-report=xml" # Corrected coverage target
testpaths = [
    "tests", # Assuming tests are in llmchat-web/tests
]
asyncio_mode = "auto"

# --- Coverage Configuration (Example for llmchat-web) ---
[tool.coverage.run]
source = ["llmchat_web"] # Corrected coverage source
omit = [
    "llmchat_web/app.py", # Example: if __main__ block in app.py is not unit tested
    # "llmchat_web/routes.py", # Or specific complex routes if needed
]

[tool.coverage.report]
show_missing = true
fail_under = 70 # Adjusted target for web app potentially
